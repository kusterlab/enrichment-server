stages:          # List of stages for jobs, and their order of execution
  - build
  - test
  - deploy

build:
  only:
    - main
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
  services:
    - name: docker:dind
      command: ["--experimental"]
  stage: build
  script:
    - PROJECT_PATH=$(echo $CI_PROJECT_PATH | tr '[:upper:]' '[:lower:]')
    - CONTAINER_IMAGE=$REGISTRY/$PROJECT_PATH
    - docker pull $CONTAINER_IMAGE:latest || true
    - DOCKER_BUILDKIT=0 docker build --cache-from $CONTAINER_IMAGE:latest --tag $CONTAINER_IMAGE:$CI_COMMIT_REF_SLUG --tag $CONTAINER_IMAGE:latest .
    - docker push $CONTAINER_IMAGE:$CI_COMMIT_REF_SLUG
    - docker push $CONTAINER_IMAGE:latest
  tags:
    - docker


unit-test-job:   # This job runs in the test stage.
  stage: test    # It only starts when the job in the build stage completes successfully.
  script:
    - echo "Running unit tests... This will take about 5 seconds."
    - sleep 5
    - echo "Code coverage is 90%"

lint-test-job:   # This job also runs in the test stage.
  stage: test    # It can run at the same time as unit-test-job (in parallel).
  script:
    - echo "Linting code... This will take about 2 seconds."
    - sleep 2
    - echo "No lint issues found."

deploy-job:      # This job runs in the deploy stage.
  stage: deploy  # It only runs when *both* jobs in the test stage complete successfully.
  environment: production
  only: 
    - main
  script:
    - echo "Deploying application..."
    - echo "Application successfully deployed."
